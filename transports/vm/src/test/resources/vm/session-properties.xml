<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
      http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <description>Test session properties propagates between flows</description>

    <vm:connector name="vmConnector"/>

    <!-- F1 call F2, F2 call F3 scenario >>> -->

    <spring:bean id="property-f1p1" class="org.mule.functional.property.SessionPropertiesValidatorComponent">
        <spring:property name="expectedProperties">
            <spring:map>
                <spring:entry key="flow1-p1" value="flow1-p1-value"/>
            </spring:map>
        </spring:property>
    </spring:bean>

    <spring:bean id="property-f1p1-f2p1" class="org.mule.functional.property.SessionPropertiesValidatorComponent">
        <spring:property name="expectedProperties">
            <spring:map>
                <spring:entry key="flow1-p1" value="flow1-p1-value"/>
                <spring:entry key="flow2-p1" value="flow2-p1-value"/>
            </spring:map>
        </spring:property>
    </spring:bean>

    <spring:bean id="property-f1p1-f2p1-f3p1" class="org.mule.functional.property.SessionPropertiesValidatorComponent">
        <spring:property name="expectedProperties">
            <spring:map>
                <spring:entry key="flow1-p1" value="flow1-p1-value"/>
                <spring:entry key="flow2-p1" value="flow2-p1-value"/>
                <spring:entry key="flow3-p1" value="flow3-p1-value"/>
            </spring:map>
        </spring:property>
    </spring:bean>

    <spring:bean id="property-f1p1-f2p1-f1p2" class="org.mule.functional.property.SessionPropertiesValidatorComponent">
        <spring:property name="expectedProperties">
            <spring:map>
                <spring:entry key="flow1-p1" value="flow1-p1-value"/>
                <spring:entry key="flow2-p1" value="flow2-p1-value"/>
                <spring:entry key="flow1-p2" value="flow1-p2-value"/>
            </spring:map>
        </spring:property>
    </spring:bean>

    <spring:bean id="property-f1p1-f2p1-f1p2-f3p1" class="org.mule.functional.property.SessionPropertiesValidatorComponent">
        <spring:property name="expectedProperties">
            <spring:map>
                <spring:entry key="flow1-p1" value="flow1-p1-value"/>
                <spring:entry key="flow2-p1" value="flow2-p1-value"/>
                <spring:entry key="flow1-p2" value="flow1-p2-value"/>
                <spring:entry key="flow3-p1" value="flow3-p1-value"/>
            </spring:map>
        </spring:property>
    </spring:bean>

    <flow name="Flow1s1">

        <vm:inbound-endpoint connector-ref="vmConnector" path="Flow1s1" exchange-pattern="request-response"/>

        <message-properties-transformer scope="session">
            <add-message-property key="flow1-p1" value="flow1-p1-value"/>
        </message-properties-transformer>

        <component><spring-object bean="property-f1p1"/></component>

        <vm:outbound-endpoint name="Flow2s1n" connector-ref="vmConnector"
                              path="Flow2s1" exchange-pattern="request-response">
        </vm:outbound-endpoint>

        <component><spring-object bean="property-f1p1-f2p1-f3p1"/></component>

        <message-properties-transformer scope="session">
            <add-message-property key="flow1-p2" value="flow1-p2-value"/>
        </message-properties-transformer>

        <component><spring-object bean="property-f1p1-f2p1-f1p2-f3p1"/></component>

    </flow>

    <flow name="Flow2s1">

        <vm:inbound-endpoint connector-ref="vmConnector" path="Flow2s1" exchange-pattern="request-response"/>

        <component><spring-object bean="property-f1p1"/></component>

        <message-properties-transformer scope="session">
            <add-message-property key="flow2-p1" value="flow2-p1-value"/>
        </message-properties-transformer>

        <component><spring-object bean="property-f1p1-f2p1"/></component>

        <vm:outbound-endpoint name="Flow3s1n" connector-ref="vmConnector"
                              path="Flow3s1" exchange-pattern="request-response">
        </vm:outbound-endpoint>

        <component><spring-object bean="property-f1p1-f2p1-f3p1"/></component>

    </flow>

    <flow name="Flow3s1">

        <vm:inbound-endpoint connector-ref="vmConnector" path="Flow3s1" exchange-pattern="request-response"/>

        <component><spring-object bean="property-f1p1-f2p1"/></component>

        <message-properties-transformer scope="session">
            <add-message-property key="flow3-p1" value="flow3-p1-value"/>
        </message-properties-transformer>

        <component><spring-object bean="property-f1p1-f2p1-f3p1"/></component>

    </flow>

    <!-- F1 call F2, F2 call F3 scenario <<< -->

    <!-- F1 call F2 , F1 call F3 scenario >>> -->

    <flow name="Flow1s2">

        <vm:inbound-endpoint connector-ref="vmConnector" path="Flow1s2" exchange-pattern="request-response"/>

        <message-properties-transformer scope="session">
            <add-message-property key="flow1-p1" value="flow1-p1-value"/>
        </message-properties-transformer>

        <component><spring-object bean="property-f1p1"/></component>

        <vm:outbound-endpoint name="Flow2s2n" connector-ref="vmConnector"
                              path="Flow2s2" exchange-pattern="request-response">
        </vm:outbound-endpoint>

        <component><spring-object bean="property-f1p1-f2p1"/></component>

        <message-properties-transformer scope="session">
            <add-message-property key="flow1-p2" value="flow1-p2-value"/>
        </message-properties-transformer>

        <vm:outbound-endpoint name="Flow3s2n" connector-ref="vmConnector"
                              path="Flow3s2" exchange-pattern="request-response">
        </vm:outbound-endpoint>

        <component><spring-object bean="property-f1p1-f2p1-f1p2-f3p1"/></component>

    </flow>

    <flow name="Flow2s2">

        <vm:inbound-endpoint connector-ref="vmConnector" path="Flow2s2" exchange-pattern="request-response"/>

        <component><spring-object bean="property-f1p1"/></component>

        <message-properties-transformer scope="session">
            <add-message-property key="flow2-p1" value="flow2-p1-value"/>
        </message-properties-transformer>

        <component><spring-object bean="property-f1p1-f2p1"/></component>

    </flow>

    <flow name="Flow3s2">

        <vm:inbound-endpoint connector-ref="vmConnector" path="Flow3s2" exchange-pattern="request-response"/>

        <component><spring-object bean="property-f1p1-f2p1"/></component>

        <message-properties-transformer scope="session">
            <add-message-property key="flow3-p1" value="flow3-p1-value"/>
        </message-properties-transformer>

        <component><spring-object bean="property-f1p1-f2p1-f1p2-f3p1"/></component>

    </flow>

    <!-- F1 call F2 , F1 call F3 scenario <<< -->


</mule>
